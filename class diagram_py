# Clase User
from multiprocessing.sharedctypes import Value


class user:

    # Propiedad1
    @property
    def idusuario(self):
        return self.__idusuario
    
    @idusuario.setter
    def idusuario(self, value):
        self.__idusuario = value
    
    # Propiedad2
    @property
    def email(self):
        return self.__email
    
    @email.setter
    def email(self, value):
        self.__email = value

    # Propiedad 3

    @property
    def password(self):
        return self.__password

    @password.setter
    def password(self, value):
        self.__password = value

    # Constructor
    def __init__(self, idusuario = 0, email = 0, password = 0):
        self.__idusuario = 0
        self.__email = 0
        self.__password = 0

    # MÃ©todo Buy
    def buy(self, dx, dy):
        self.__x += dx
        self.__y += dy
    
    # Metodo Make Post
    def makepost(self, dx, dy):
        self.__x += dx
        self.__y += dy
    
    # Metodo Create News
    def createnews(self, dx, dy):
        self.__x += dx
        self.__y += dy

# Clase Product
class product:

    # Propiedad1
    @property
    def product_name(self):
        return self.__product_name
    
    @product_name.setter
    def product_name(self, value):
        self.__product_name = value
    
    # Propiedad2
    @property
    def idProduct(self):
        return self.__idProduct
    
    @idProduct.setter
    def idProduct(self, value):
        self.__idProduct = value

    # Propiedad3
    @property
    def product_price(self):
        return self.__product_price
    
    @product_price.setter
    def product_price(self, value):
        self.__product_price = value

    # Propiedad4
    @property
    def description(self):
        return self.__description
    
    @description.setter
    def description(self, value):
        self.__description = value

    # Constructor
    def __init__(self, product_name = 0, idProduct = 0, product_price = 0, description = 0):
        self.__product_name = 0
        self.__idProduct = 0
        self.__product_price = 0
        self.__description = 0

# Clase Person
class Person:

    # Propiedad1
    @property
    def idPerson(self):
        return self.__idPerson
    
    @idPerson.setter
    def idPerson(self, value):
        self.__idPerson = value
    
    # Propiedad2
    @property
    def name(self):
        return self.__name
    
    @name.setter
    def name(self, value):
        self.__name = value

    # Propiedad3
    @property
    def surname(self):
        return self.__surname
    
    @surname.setter
    def surname(self, value):
        self.__surname = value

    # Propiedad4
    @property
    def dateofbirth(self):
        return self.__dateofbirth
    
    @dateofbirth.setter
    def dateofbirth(self, value):
        self.__dateofbirth = value
    
    # Propiedad5
    @property
    def adress(self):
        self.__adress = value

    @adress.setter
    def adress(self, value):
        self.__adress = value

    # Constructor
    def __init__(self, idPerson = 0, name = 0, surname = 0, dateofbirth = 0, adress = 0):
        self.__idPerson = 0
        self.__name = 0
        self.__surname = 0
        self.__dateofbirth = 0
        self.__adress = 0 

# Crear class y propiedades Rol/Order/Post/News/Category
# Commitear en github
# Avisar en grupo
# Seguir con wordpress - el anzuelo (ver requisitos de web page)
